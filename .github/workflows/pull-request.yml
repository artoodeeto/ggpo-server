name: pull-request
on:
  pull_request:
    branches:
      - master

jobs:
  # setup-docker:
  #   runs-on: ubuntu-20.04
  #   name: setup-docker
  #   steps:
  #     - uses: docker-practice/actions-setup-docker@master
  #     - run: |
  #         set -x
  #         docker version

  # setup-env:

  testing:
    runs-on: ubuntu-20.04
    name: run test
    needs: setup-docker
    steps:
      - uses: actions/checkout@v2
      - name: running test
        run: |
          touch .env

          echo NODE_ENV=development >> .env
          echo API_VERSION=v1 >> .env
          echo PREFIX=api >> .env
          echo TOKEN_EXP=10800000  >> .env
          echo SALT_ROUNDS=11 >> .env
          echo TYPEORM_CONNECTION=mysql >> .env
          echo TYPEORM_HOST=db >> .env
          echo TYPEORM_PORT=3306 >> .env
          echo TYPEORM_LOGGING=true >> .env
          echo #TYPEORM_LOGGER=file #use only for production >> .env
          echo TYPEORM_USERNAME=root >> .env
          echo TYPEORM_PASSWORD=password >> .env
          echo TYPEORM_DATABASE=development_db >> .env
          echo TYPEORM_ENTITIES=src/models/**/*.ts >> .env
          echo TYPEORM_MIGRATIONS=db/migrations/**/*.ts >> .env
          echo TYPEORM_SUBSCRIBERS=src/subscriberTYPEORM_LOGGERs/**/*.ts >> .env
          echo TYPEORM_MAX_QUERY_EXECUTION_TIME=2000 >> .env
          echo TYPEORM_ENTITIES_DIR=src/models >> .env
          echo TYPEORM_MIGRATIONS_DIR=db/migrations >> .env
          echo TYPEORM_SUBSCRIBERS_DIR=src/subscribers >> .env
          echo TYPEORM_CACHE=true >> .env
          echo TYPEORM_CACHE_DURATION=5000 >> .env
          echo MYSQL_PASSWORD=password >> .env
          echo MYSQL_ROOT_PASSWORD=password >> .env
          echo MYSQL_DATABASE=development_db >> .env
          echo OVERNIGHT_JWT_SECRET='dis iss sikrit misig' >> .env
          echo OVERNIGHT_JWT_EXP='3h' >> .env
          echo FRONTEND_BASE_URL='http://localhost:3000' >> .env
          echo BACKEND_BASE_URL='http://localhost:8000/api/v1' >> .env
          echo GGPO_COOKIE='_ggpo' >> .env

          docker-compose up --build
          npm test
